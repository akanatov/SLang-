name01 (var x: Type ) do end 	// routine declaration
name02 ( + operator)  		// unqualified call or assignment ().x or ().x := expr
name03 ( + operator) := expr  	// unqualified call or assignment ().x or ().x := expr
name04 (id: Type) do end	// routine declaration
name05 (id.foo, goo)		// unqualified call or assignment
name06 (id - operator)		// unqualified call or assignment
name07 ( nextName ) 		// unqualified call or assignment
// name (id, id, ... 	>> scan further
name08 (id1, id2, var id3: Type) do end	// routine declaration
name09 (id1, id2, id3: Type) do end	// routine declaration
name10 (id1, id2, id3.foo, goo)  	// unqualified call or assignment
name11 (id1, id2, id3 + operator)	// unqualified call or assignment
name12 (id1, id2, ~a)			// unqualified call or assignment
name13 ( + operator) := expr  	 	// unqualified call or assignment ().x or ().x := expr
name14 ( + operator).foo := expr 	// unqualified call or assignment ().x or ().x := expr
